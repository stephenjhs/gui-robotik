using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO.Ports;
using System.Linq;
using System.Reflection.Emit;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using ClosedXML.Excel;

namespace User_Interface_Sistem_Kendali_Motor_DC
{
    public partial class Form1 : Form
    {

        private List<string> timeData = new List<string> { };
        private List<string> setRPMHistory = new List<string> { };

        private bool isRunning = true;

        private string rpmArduino;
        private string getData;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            chart1.Series["RPM"].Points.AddXY(0, 0);
            serialPort1.PortName = "COM5";
            serialPort1.BaudRate = 9600;
            serialPort1.Open();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (isRunning)
            {
                if (!serialPort1.IsOpen)
                    serialPort1.Open();

                string data = $"RPM:{numericUpDown1.Value}";
                serialPort1.WriteLine(data);

                button1.BackColor = System.Drawing.Color.DarkRed;
                button1.Text = "Stop";
                isRunning = false;
                timer1.Start();

            }
            else
            {
                if (serialPort1.IsOpen)
                    serialPort1.WriteLine("STOP");

                button1.BackColor = System.Drawing.Color.MidnightBlue;
                button1.Text = "Run";
                isRunning = true;
                timer1.Stop();
            }
        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void panel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void label5_Click(object sender, EventArgs e)
        {

        }

        private void label7_Click(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void label8_Click(object sender, EventArgs e)
        {

        }

        private void panel7_Paint(object sender, PaintEventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {

        }

        private void label9_Click(object sender, EventArgs e)
        {

        }

        private void button4_Click(object sender, EventArgs e)
        {
            chart1.Series["RPM"].Points.Clear();

            chart1.Series["RPM"].Points.AddXY(0, 0);

            chart1.ResetAutoValues();
            rpmArduino = "0";

            button1.BackColor = System.Drawing.Color.MidnightBlue;
            button1.Text = "Run";
            isRunning = true;
            timer1.Stop();

            label9.Text = "0";
        }

        private void chart1_Click(object sender, EventArgs e)
        {

        }

        private void panel10_Paint(object sender, PaintEventArgs e)
        {

        }

        private void timer1_Tick(object sender, EventArgs e)
        {

            label9.Text = rpmArduino;
            DateTime currentTime = DateTime.Now;

            timeData.Add(currentTime.ToString("HH:mm:ss"));
            setRPMHistory.Add($"{numericUpDown1.Value}");

            chart1.Series["RPM"].Points.AddXY(currentTime.ToString("HH:mm:ss"), rpmArduino);
            chart1.ChartAreas["RPM"].RecalculateAxesScale();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            using (SaveFileDialog sfd = new SaveFileDialog())
            {
                sfd.Filter = "Excel Files (.xlsx)|.xlsx";
                sfd.FileName = "Data Grafik Motor DC.xlsx";

                if (sfd.ShowDialog() == DialogResult.OK)
                {
                    using (var workbook = new XLWorkbook())
                    {
                        var worksheet = workbook.Worksheets.Add("Data Grafik");

                        worksheet.Cell(1, 1).Value = "Waktu";
                        worksheet.Cell(1, 2).Value = "Kecepatan (rpm)";
                        worksheet.Cell(1, 3).Value = "Set Kecepatan (rpm)";

                        int row = 2;
                        int index = 0;
                        foreach (var point in chart1.Series["RPM"].Points.Skip(1))
                        {
                            if (index < (timeData.Count))
                            {
                                worksheet.Cell(row, 1).Value = $"{timeData[index]}";
                            }
                            worksheet.Cell(row, 2).Value = point.YValues[0];

                            if (index < (setRPMHistory.Count))
                            {
                                worksheet.Cell(row, 3).Value = $"{setRPMHistory[index]}";
                            }
                            row++;
                            index++;
                        }

                        workbook.SaveAs(sfd.FileName);
                    }

                    MessageBox.Show("Data berhasil diekspor ke Excel!", "Sukses", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
        }

        private void serialPort1_DataReceived(object sender, System.IO.Ports.SerialDataReceivedEventArgs e)
        {
            getData = serialPort1.ReadLine();
            this.Invoke(new EventHandler(updateData));

        }

        private void updateData(object sender, EventArgs e)
        {
            rpmArduino = getData;
        }

        private void label11_Click(object sender, EventArgs e)
        {

        }


    }

}